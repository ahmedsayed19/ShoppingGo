
SentData1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000606  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000067a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  0000067a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000067a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  000006e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015f9  00000000  00000000  000008a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000961  00000000  00000000  00001e99  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ae1  00000000  00000000  000027fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003ac  00000000  00000000  000032dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000574  00000000  00000000  00003688  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b08  00000000  00000000  00003bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00004704  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 90 02 	jmp	0x520	; 0x520 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 87 02 	call	0x50e	; 0x50e <main>
  74:	0c 94 01 03 	jmp	0x602	; 0x602 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_SET_BIN_DIR>:
		case DIO_PORTC:
		*val=GET_BIT(PINC,pin);
		break;
		
		case DIO_PORTD:
		*val=GET_BIT(PIND,pin);
  7c:	41 30       	cpi	r20, 0x01	; 1
  7e:	a1 f5       	brne	.+104    	; 0xe8 <DIO_SET_BIN_DIR+0x6c>
  80:	81 30       	cpi	r24, 0x01	; 1
  82:	89 f0       	breq	.+34     	; 0xa6 <DIO_SET_BIN_DIR+0x2a>
  84:	28 f0       	brcs	.+10     	; 0x90 <DIO_SET_BIN_DIR+0x14>
  86:	82 30       	cpi	r24, 0x02	; 2
  88:	c9 f0       	breq	.+50     	; 0xbc <DIO_SET_BIN_DIR+0x40>
  8a:	83 30       	cpi	r24, 0x03	; 3
  8c:	11 f1       	breq	.+68     	; 0xd2 <DIO_SET_BIN_DIR+0x56>
  8e:	08 95       	ret
  90:	2a b3       	in	r18, 0x1a	; 26
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	02 c0       	rjmp	.+4      	; 0x9c <DIO_SET_BIN_DIR+0x20>
  98:	88 0f       	add	r24, r24
  9a:	99 1f       	adc	r25, r25
  9c:	6a 95       	dec	r22
  9e:	e2 f7       	brpl	.-8      	; 0x98 <DIO_SET_BIN_DIR+0x1c>
  a0:	82 2b       	or	r24, r18
  a2:	8a bb       	out	0x1a, r24	; 26
  a4:	08 95       	ret
  a6:	27 b3       	in	r18, 0x17	; 23
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <DIO_SET_BIN_DIR+0x36>
  ae:	88 0f       	add	r24, r24
  b0:	99 1f       	adc	r25, r25
  b2:	6a 95       	dec	r22
  b4:	e2 f7       	brpl	.-8      	; 0xae <DIO_SET_BIN_DIR+0x32>
  b6:	82 2b       	or	r24, r18
  b8:	87 bb       	out	0x17, r24	; 23
  ba:	08 95       	ret
  bc:	24 b3       	in	r18, 0x14	; 20
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <DIO_SET_BIN_DIR+0x4c>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	6a 95       	dec	r22
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <DIO_SET_BIN_DIR+0x48>
  cc:	82 2b       	or	r24, r18
  ce:	84 bb       	out	0x14, r24	; 20
  d0:	08 95       	ret
  d2:	21 b3       	in	r18, 0x11	; 17
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	02 c0       	rjmp	.+4      	; 0xde <DIO_SET_BIN_DIR+0x62>
  da:	88 0f       	add	r24, r24
  dc:	99 1f       	adc	r25, r25
  de:	6a 95       	dec	r22
  e0:	e2 f7       	brpl	.-8      	; 0xda <DIO_SET_BIN_DIR+0x5e>
  e2:	82 2b       	or	r24, r18
  e4:	81 bb       	out	0x11, r24	; 17
  e6:	08 95       	ret
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	91 f0       	breq	.+36     	; 0x110 <DIO_SET_BIN_DIR+0x94>
  ec:	28 f0       	brcs	.+10     	; 0xf8 <DIO_SET_BIN_DIR+0x7c>
  ee:	82 30       	cpi	r24, 0x02	; 2
  f0:	d9 f0       	breq	.+54     	; 0x128 <DIO_SET_BIN_DIR+0xac>
  f2:	83 30       	cpi	r24, 0x03	; 3
  f4:	29 f1       	breq	.+74     	; 0x140 <DIO_SET_BIN_DIR+0xc4>
  f6:	08 95       	ret
  f8:	2a b3       	in	r18, 0x1a	; 26
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_SET_BIN_DIR+0x88>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_SET_BIN_DIR+0x84>
 108:	80 95       	com	r24
 10a:	82 23       	and	r24, r18
 10c:	8a bb       	out	0x1a, r24	; 26
 10e:	08 95       	ret
 110:	27 b3       	in	r18, 0x17	; 23
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_SET_BIN_DIR+0xa0>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_SET_BIN_DIR+0x9c>
 120:	80 95       	com	r24
 122:	82 23       	and	r24, r18
 124:	87 bb       	out	0x17, r24	; 23
 126:	08 95       	ret
 128:	24 b3       	in	r18, 0x14	; 20
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 c0       	rjmp	.+4      	; 0x134 <DIO_SET_BIN_DIR+0xb8>
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	6a 95       	dec	r22
 136:	e2 f7       	brpl	.-8      	; 0x130 <DIO_SET_BIN_DIR+0xb4>
 138:	80 95       	com	r24
 13a:	82 23       	and	r24, r18
 13c:	84 bb       	out	0x14, r24	; 20
 13e:	08 95       	ret
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SET_BIN_DIR+0xd0>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SET_BIN_DIR+0xcc>
 150:	80 95       	com	r24
 152:	82 23       	and	r24, r18
 154:	81 bb       	out	0x11, r24	; 17
 156:	08 95       	ret

00000158 <DIO_SET_BIN_VAL>:
 158:	81 30       	cpi	r24, 0x01	; 1
 15a:	01 f1       	breq	.+64     	; 0x19c <DIO_SET_BIN_VAL+0x44>
 15c:	30 f0       	brcs	.+12     	; 0x16a <DIO_SET_BIN_VAL+0x12>
 15e:	82 30       	cpi	r24, 0x02	; 2
 160:	b1 f1       	breq	.+108    	; 0x1ce <DIO_SET_BIN_VAL+0x76>
 162:	83 30       	cpi	r24, 0x03	; 3
 164:	09 f4       	brne	.+2      	; 0x168 <DIO_SET_BIN_VAL+0x10>
 166:	4c c0       	rjmp	.+152    	; 0x200 <DIO_SET_BIN_VAL+0xa8>
 168:	08 95       	ret
 16a:	41 30       	cpi	r20, 0x01	; 1
 16c:	59 f4       	brne	.+22     	; 0x184 <DIO_SET_BIN_VAL+0x2c>
 16e:	2b b3       	in	r18, 0x1b	; 27
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_SET_BIN_VAL+0x22>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_SET_BIN_VAL+0x1e>
 17e:	82 2b       	or	r24, r18
 180:	8b bb       	out	0x1b, r24	; 27
 182:	08 95       	ret
 184:	2b b3       	in	r18, 0x1b	; 27
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	02 c0       	rjmp	.+4      	; 0x190 <DIO_SET_BIN_VAL+0x38>
 18c:	88 0f       	add	r24, r24
 18e:	99 1f       	adc	r25, r25
 190:	6a 95       	dec	r22
 192:	e2 f7       	brpl	.-8      	; 0x18c <DIO_SET_BIN_VAL+0x34>
 194:	80 95       	com	r24
 196:	82 23       	and	r24, r18
 198:	8b bb       	out	0x1b, r24	; 27
 19a:	08 95       	ret
 19c:	41 30       	cpi	r20, 0x01	; 1
 19e:	59 f4       	brne	.+22     	; 0x1b6 <DIO_SET_BIN_VAL+0x5e>
 1a0:	28 b3       	in	r18, 0x18	; 24
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_SET_BIN_VAL+0x54>
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	6a 95       	dec	r22
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_SET_BIN_VAL+0x50>
 1b0:	82 2b       	or	r24, r18
 1b2:	88 bb       	out	0x18, r24	; 24
 1b4:	08 95       	ret
 1b6:	28 b3       	in	r18, 0x18	; 24
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <DIO_SET_BIN_VAL+0x6a>
 1be:	88 0f       	add	r24, r24
 1c0:	99 1f       	adc	r25, r25
 1c2:	6a 95       	dec	r22
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <DIO_SET_BIN_VAL+0x66>
 1c6:	80 95       	com	r24
 1c8:	82 23       	and	r24, r18
 1ca:	88 bb       	out	0x18, r24	; 24
 1cc:	08 95       	ret
 1ce:	41 30       	cpi	r20, 0x01	; 1
 1d0:	59 f4       	brne	.+22     	; 0x1e8 <DIO_SET_BIN_VAL+0x90>
 1d2:	25 b3       	in	r18, 0x15	; 21
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_SET_BIN_VAL+0x86>
 1da:	88 0f       	add	r24, r24
 1dc:	99 1f       	adc	r25, r25
 1de:	6a 95       	dec	r22
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_SET_BIN_VAL+0x82>
 1e2:	82 2b       	or	r24, r18
 1e4:	85 bb       	out	0x15, r24	; 21
 1e6:	08 95       	ret
 1e8:	25 b3       	in	r18, 0x15	; 21
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_SET_BIN_VAL+0x9c>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_SET_BIN_VAL+0x98>
 1f8:	80 95       	com	r24
 1fa:	82 23       	and	r24, r18
 1fc:	85 bb       	out	0x15, r24	; 21
 1fe:	08 95       	ret
 200:	41 30       	cpi	r20, 0x01	; 1
 202:	59 f4       	brne	.+22     	; 0x21a <DIO_SET_BIN_VAL+0xc2>
 204:	22 b3       	in	r18, 0x12	; 18
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_SET_BIN_VAL+0xb8>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_SET_BIN_VAL+0xb4>
 214:	82 2b       	or	r24, r18
 216:	82 bb       	out	0x12, r24	; 18
 218:	08 95       	ret
 21a:	22 b3       	in	r18, 0x12	; 18
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_SET_BIN_VAL+0xce>
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_SET_BIN_VAL+0xca>
 22a:	80 95       	com	r24
 22c:	82 23       	and	r24, r18
 22e:	82 bb       	out	0x12, r24	; 18
 230:	08 95       	ret

00000232 <DIO_TOGGLE_BIN>:
	}
}

void DIO_TOGGLE_BIN(uint8 port,uint8 pin)
{
	switch(port)
 232:	81 30       	cpi	r24, 0x01	; 1
 234:	89 f0       	breq	.+34     	; 0x258 <DIO_TOGGLE_BIN+0x26>
 236:	28 f0       	brcs	.+10     	; 0x242 <DIO_TOGGLE_BIN+0x10>
 238:	82 30       	cpi	r24, 0x02	; 2
 23a:	c9 f0       	breq	.+50     	; 0x26e <DIO_TOGGLE_BIN+0x3c>
 23c:	83 30       	cpi	r24, 0x03	; 3
 23e:	11 f1       	breq	.+68     	; 0x284 <DIO_TOGGLE_BIN+0x52>
 240:	08 95       	ret
	{
		case DIO_PORTA:
		TOGGLE_BIT(PORTA,pin);
 242:	2b b3       	in	r18, 0x1b	; 27
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_TOGGLE_BIN+0x1c>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_TOGGLE_BIN+0x18>
 252:	82 27       	eor	r24, r18
 254:	8b bb       	out	0x1b, r24	; 27
		break;
 256:	08 95       	ret
		
		case DIO_PORTB:
		TOGGLE_BIT(PORTB,pin);
 258:	28 b3       	in	r18, 0x18	; 24
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 c0       	rjmp	.+4      	; 0x264 <DIO_TOGGLE_BIN+0x32>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	6a 95       	dec	r22
 266:	e2 f7       	brpl	.-8      	; 0x260 <DIO_TOGGLE_BIN+0x2e>
 268:	82 27       	eor	r24, r18
 26a:	88 bb       	out	0x18, r24	; 24
		break;
 26c:	08 95       	ret
		
		case DIO_PORTC:
		TOGGLE_BIT(PORTC,pin);
 26e:	25 b3       	in	r18, 0x15	; 21
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_TOGGLE_BIN+0x48>
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	6a 95       	dec	r22
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_TOGGLE_BIN+0x44>
 27e:	82 27       	eor	r24, r18
 280:	85 bb       	out	0x15, r24	; 21
		break;
 282:	08 95       	ret
		
		case DIO_PORTD:
		TOGGLE_BIT(PORTD,pin);
 284:	22 b3       	in	r18, 0x12	; 18
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_TOGGLE_BIN+0x5e>
 28c:	88 0f       	add	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	6a 95       	dec	r22
 292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_TOGGLE_BIN+0x5a>
 294:	82 27       	eor	r24, r18
 296:	82 bb       	out	0x12, r24	; 18
 298:	08 95       	ret

0000029a <Set_GlobalInterrupt>:
#include "External_interrupt.h"

void Set_GlobalInterrupt(void)
{
	#if   GLOBAL_INTERRUPT_STATE == GLOBAL_INTERRUPT_ENABLE
	      SET_BIT(SREG,7);
 29a:	8f b7       	in	r24, 0x3f	; 63
 29c:	80 68       	ori	r24, 0x80	; 128
 29e:	8f bf       	out	0x3f, r24	; 63
 2a0:	08 95       	ret

000002a2 <ExternalInterrupt0_INIT>:
	#endif
}

void ExternalInterrupt0_INIT(void)
{
	Set_GlobalInterrupt();
 2a2:	0e 94 4d 01 	call	0x29a	; 0x29a <Set_GlobalInterrupt>
	/*enable ext interrupt0 */
	SET_BIT(GICR,6);
 2a6:	8b b7       	in	r24, 0x3b	; 59
 2a8:	80 64       	ori	r24, 0x40	; 64
 2aa:	8b bf       	out	0x3b, r24	; 59
	
	#if    EXTERNAL_INTERRUPT0_TRIGGER == INT_TRIGGER_LOW_LEVEL
	       CLR_BIT(MCUCR,0);
		   CLR_BIT(MCUCR,1);
	#elif  EXTERNAL_INTERRUPT0_TRIGGER == INT_TRIGGER_RISING_EDGE
	       SET_BIT(MCUCR,0);
 2ac:	85 b7       	in	r24, 0x35	; 53
 2ae:	81 60       	ori	r24, 0x01	; 1
 2b0:	85 bf       	out	0x35, r24	; 53
		   SET_BIT(MCUCR,1);
 2b2:	85 b7       	in	r24, 0x35	; 53
 2b4:	82 60       	ori	r24, 0x02	; 2
 2b6:	85 bf       	out	0x35, r24	; 53
 2b8:	08 95       	ret

000002ba <LCD_writeCommand>:

void LCD_Go_To(uint8 row,uint8 col)
{
	uint8 pos[2]={0x80,0xc0};
	LCD_writeCommand(pos[row]+col);
}
 2ba:	cf 93       	push	r28
 2bc:	c8 2f       	mov	r28, r24
 2be:	40 e0       	ldi	r20, 0x00	; 0
 2c0:	61 e0       	ldi	r22, 0x01	; 1
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 2c8:	40 e0       	ldi	r20, 0x00	; 0
 2ca:	62 e0       	ldi	r22, 0x02	; 2
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 2d2:	40 e0       	ldi	r20, 0x00	; 0
 2d4:	63 e0       	ldi	r22, 0x03	; 3
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 2dc:	8b b3       	in	r24, 0x1b	; 27
 2de:	9c 2f       	mov	r25, r28
 2e0:	90 7f       	andi	r25, 0xF0	; 240
 2e2:	8f 70       	andi	r24, 0x0F	; 15
 2e4:	89 2b       	or	r24, r25
 2e6:	8b bb       	out	0x1b, r24	; 27
 2e8:	41 e0       	ldi	r20, 0x01	; 1
 2ea:	63 e0       	ldi	r22, 0x03	; 3
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 2f2:	8f e9       	ldi	r24, 0x9F	; 159
 2f4:	9f e0       	ldi	r25, 0x0F	; 15
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <LCD_writeCommand+0x3c>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <LCD_writeCommand+0x42>
 2fc:	00 00       	nop
 2fe:	40 e0       	ldi	r20, 0x00	; 0
 300:	63 e0       	ldi	r22, 0x03	; 3
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 308:	20 e1       	ldi	r18, 0x10	; 16
 30a:	c2 9f       	mul	r28, r18
 30c:	c0 01       	movw	r24, r0
 30e:	11 24       	eor	r1, r1
 310:	9b b3       	in	r25, 0x1b	; 27
 312:	9f 70       	andi	r25, 0x0F	; 15
 314:	89 2b       	or	r24, r25
 316:	8b bb       	out	0x1b, r24	; 27
 318:	41 e0       	ldi	r20, 0x01	; 1
 31a:	63 e0       	ldi	r22, 0x03	; 3
 31c:	81 e0       	ldi	r24, 0x01	; 1
 31e:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 322:	8f e9       	ldi	r24, 0x9F	; 159
 324:	9f e0       	ldi	r25, 0x0F	; 15
 326:	01 97       	sbiw	r24, 0x01	; 1
 328:	f1 f7       	brne	.-4      	; 0x326 <LCD_writeCommand+0x6c>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <LCD_writeCommand+0x72>
 32c:	00 00       	nop
 32e:	40 e0       	ldi	r20, 0x00	; 0
 330:	63 e0       	ldi	r22, 0x03	; 3
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 338:	8f e1       	ldi	r24, 0x1F	; 31
 33a:	9e e4       	ldi	r25, 0x4E	; 78
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	f1 f7       	brne	.-4      	; 0x33c <LCD_writeCommand+0x82>
 340:	00 c0       	rjmp	.+0      	; 0x342 <LCD_writeCommand+0x88>
 342:	00 00       	nop
 344:	cf 91       	pop	r28
 346:	08 95       	ret

00000348 <LCD_init>:
 348:	41 e0       	ldi	r20, 0x01	; 1
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 352:	41 e0       	ldi	r20, 0x01	; 1
 354:	62 e0       	ldi	r22, 0x02	; 2
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 35c:	41 e0       	ldi	r20, 0x01	; 1
 35e:	63 e0       	ldi	r22, 0x03	; 3
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 366:	41 e0       	ldi	r20, 0x01	; 1
 368:	64 e0       	ldi	r22, 0x04	; 4
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 370:	41 e0       	ldi	r20, 0x01	; 1
 372:	65 e0       	ldi	r22, 0x05	; 5
 374:	80 e0       	ldi	r24, 0x00	; 0
 376:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 37a:	41 e0       	ldi	r20, 0x01	; 1
 37c:	66 e0       	ldi	r22, 0x06	; 6
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 384:	41 e0       	ldi	r20, 0x01	; 1
 386:	67 e0       	ldi	r22, 0x07	; 7
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 38e:	2f ef       	ldi	r18, 0xFF	; 255
 390:	81 ee       	ldi	r24, 0xE1	; 225
 392:	94 e0       	ldi	r25, 0x04	; 4
 394:	21 50       	subi	r18, 0x01	; 1
 396:	80 40       	sbci	r24, 0x00	; 0
 398:	90 40       	sbci	r25, 0x00	; 0
 39a:	e1 f7       	brne	.-8      	; 0x394 <LCD_init+0x4c>
 39c:	00 c0       	rjmp	.+0      	; 0x39e <LCD_init+0x56>
 39e:	00 00       	nop
 3a0:	83 e3       	ldi	r24, 0x33	; 51
 3a2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 3a6:	82 e3       	ldi	r24, 0x32	; 50
 3a8:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 3ac:	88 e2       	ldi	r24, 0x28	; 40
 3ae:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 3b2:	8c e0       	ldi	r24, 0x0C	; 12
 3b4:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 3be:	86 e0       	ldi	r24, 0x06	; 6
 3c0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 3c4:	82 e0       	ldi	r24, 0x02	; 2
 3c6:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 3ca:	2f ef       	ldi	r18, 0xFF	; 255
 3cc:	81 ee       	ldi	r24, 0xE1	; 225
 3ce:	94 e0       	ldi	r25, 0x04	; 4
 3d0:	21 50       	subi	r18, 0x01	; 1
 3d2:	80 40       	sbci	r24, 0x00	; 0
 3d4:	90 40       	sbci	r25, 0x00	; 0
 3d6:	e1 f7       	brne	.-8      	; 0x3d0 <LCD_init+0x88>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <LCD_init+0x92>
 3da:	00 00       	nop
 3dc:	08 95       	ret

000003de <LCD_writeChar>:
 3de:	cf 93       	push	r28
 3e0:	c8 2f       	mov	r28, r24
 3e2:	41 e0       	ldi	r20, 0x01	; 1
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	62 e0       	ldi	r22, 0x02	; 2
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 3f6:	40 e0       	ldi	r20, 0x00	; 0
 3f8:	63 e0       	ldi	r22, 0x03	; 3
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 400:	8b b3       	in	r24, 0x1b	; 27
 402:	9c 2f       	mov	r25, r28
 404:	90 7f       	andi	r25, 0xF0	; 240
 406:	8f 70       	andi	r24, 0x0F	; 15
 408:	89 2b       	or	r24, r25
 40a:	8b bb       	out	0x1b, r24	; 27
 40c:	41 e0       	ldi	r20, 0x01	; 1
 40e:	63 e0       	ldi	r22, 0x03	; 3
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 416:	8f e9       	ldi	r24, 0x9F	; 159
 418:	9f e0       	ldi	r25, 0x0F	; 15
 41a:	01 97       	sbiw	r24, 0x01	; 1
 41c:	f1 f7       	brne	.-4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 420:	00 00       	nop
 422:	40 e0       	ldi	r20, 0x00	; 0
 424:	63 e0       	ldi	r22, 0x03	; 3
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 42c:	20 e1       	ldi	r18, 0x10	; 16
 42e:	c2 9f       	mul	r28, r18
 430:	c0 01       	movw	r24, r0
 432:	11 24       	eor	r1, r1
 434:	9b b3       	in	r25, 0x1b	; 27
 436:	9f 70       	andi	r25, 0x0F	; 15
 438:	89 2b       	or	r24, r25
 43a:	8b bb       	out	0x1b, r24	; 27
 43c:	41 e0       	ldi	r20, 0x01	; 1
 43e:	63 e0       	ldi	r22, 0x03	; 3
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 446:	8f e9       	ldi	r24, 0x9F	; 159
 448:	9f e0       	ldi	r25, 0x0F	; 15
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	f1 f7       	brne	.-4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 44e:	00 c0       	rjmp	.+0      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 450:	00 00       	nop
 452:	40 e0       	ldi	r20, 0x00	; 0
 454:	63 e0       	ldi	r22, 0x03	; 3
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	0e 94 ac 00 	call	0x158	; 0x158 <DIO_SET_BIN_VAL>
 45c:	8f e1       	ldi	r24, 0x1F	; 31
 45e:	9e e4       	ldi	r25, 0x4E	; 78
 460:	01 97       	sbiw	r24, 0x01	; 1
 462:	f1 f7       	brne	.-4      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
 464:	00 c0       	rjmp	.+0      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
 466:	00 00       	nop
 468:	cf 91       	pop	r28
 46a:	08 95       	ret

0000046c <LCD_clear>:
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	0e 94 5d 01 	call	0x2ba	; 0x2ba <LCD_writeCommand>
 472:	08 95       	ret

00000474 <LCD_writeInt>:
void LCD_writeInt(uint32 num)
{
 474:	0f 93       	push	r16
 476:	1f 93       	push	r17
 478:	cf 93       	push	r28
 47a:	df 93       	push	r29
 47c:	cd b7       	in	r28, 0x3d	; 61
 47e:	de b7       	in	r29, 0x3e	; 62
 480:	2a 97       	sbiw	r28, 0x0a	; 10
 482:	0f b6       	in	r0, 0x3f	; 63
 484:	f8 94       	cli
 486:	de bf       	out	0x3e, r29	; 62
 488:	0f be       	out	0x3f, r0	; 63
 48a:	cd bf       	out	0x3d, r28	; 61
	uint8 arr[10],con=0;
 48c:	00 e0       	ldi	r16, 0x00	; 0
	
	while(num)
 48e:	13 c0       	rjmp	.+38     	; 0x4b6 <LCD_writeInt+0x42>
	{
		arr[con]=(num%10)+48;
 490:	2a e0       	ldi	r18, 0x0A	; 10
 492:	30 e0       	ldi	r19, 0x00	; 0
 494:	40 e0       	ldi	r20, 0x00	; 0
 496:	50 e0       	ldi	r21, 0x00	; 0
 498:	0e 94 df 02 	call	0x5be	; 0x5be <__udivmodsi4>
 49c:	e1 e0       	ldi	r30, 0x01	; 1
 49e:	f0 e0       	ldi	r31, 0x00	; 0
 4a0:	ec 0f       	add	r30, r28
 4a2:	fd 1f       	adc	r31, r29
 4a4:	e0 0f       	add	r30, r16
 4a6:	f1 1d       	adc	r31, r1
 4a8:	60 5d       	subi	r22, 0xD0	; 208
 4aa:	60 83       	st	Z, r22
		con++;
 4ac:	0f 5f       	subi	r16, 0xFF	; 255
		num/=10;
 4ae:	62 2f       	mov	r22, r18
 4b0:	73 2f       	mov	r23, r19
 4b2:	84 2f       	mov	r24, r20
 4b4:	95 2f       	mov	r25, r21
}
void LCD_writeInt(uint32 num)
{
	uint8 arr[10],con=0;
	
	while(num)
 4b6:	61 15       	cp	r22, r1
 4b8:	71 05       	cpc	r23, r1
 4ba:	81 05       	cpc	r24, r1
 4bc:	91 05       	cpc	r25, r1
 4be:	41 f7       	brne	.-48     	; 0x490 <LCD_writeInt+0x1c>
	{
		arr[con]=(num%10)+48;
		con++;
		num/=10;
	}
	for(int i=con-1;i>=0;i--)
 4c0:	10 e0       	ldi	r17, 0x00	; 0
 4c2:	01 50       	subi	r16, 0x01	; 1
 4c4:	11 09       	sbc	r17, r1
 4c6:	0b c0       	rjmp	.+22     	; 0x4de <LCD_writeInt+0x6a>
	{
		LCD_writeChar(arr[i]);
 4c8:	e1 e0       	ldi	r30, 0x01	; 1
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	ec 0f       	add	r30, r28
 4ce:	fd 1f       	adc	r31, r29
 4d0:	e0 0f       	add	r30, r16
 4d2:	f1 1f       	adc	r31, r17
 4d4:	80 81       	ld	r24, Z
 4d6:	0e 94 ef 01 	call	0x3de	; 0x3de <LCD_writeChar>
	{
		arr[con]=(num%10)+48;
		con++;
		num/=10;
	}
	for(int i=con-1;i>=0;i--)
 4da:	01 50       	subi	r16, 0x01	; 1
 4dc:	11 09       	sbc	r17, r1
 4de:	11 23       	and	r17, r17
 4e0:	9c f7       	brge	.-26     	; 0x4c8 <LCD_writeInt+0x54>
	{
		LCD_writeChar(arr[i]);
	}
	
}
 4e2:	2a 96       	adiw	r28, 0x0a	; 10
 4e4:	0f b6       	in	r0, 0x3f	; 63
 4e6:	f8 94       	cli
 4e8:	de bf       	out	0x3e, r29	; 62
 4ea:	0f be       	out	0x3f, r0	; 63
 4ec:	cd bf       	out	0x3d, r28	; 61
 4ee:	df 91       	pop	r29
 4f0:	cf 91       	pop	r28
 4f2:	1f 91       	pop	r17
 4f4:	0f 91       	pop	r16
 4f6:	08 95       	ret

000004f8 <Led0_INIT>:
{
	DIO_SET_BIN_VAL(Led0Port,Led0Bit,DIO_BIN_HIGT);
}
void Led0_OFF(void)
{
	DIO_SET_BIN_VAL(Led0Port,Led0Bit,DIO_BIN_LOW);
 4f8:	41 e0       	ldi	r20, 0x01	; 1
 4fa:	62 e0       	ldi	r22, 0x02	; 2
 4fc:	82 e0       	ldi	r24, 0x02	; 2
 4fe:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
 502:	08 95       	ret

00000504 <Led0_Toggel>:
}
void Led0_Toggel(void)
{
	DIO_TOGGLE_BIN(Led0Port,Led0Bit);
 504:	62 e0       	ldi	r22, 0x02	; 2
 506:	82 e0       	ldi	r24, 0x02	; 2
 508:	0e 94 19 01 	call	0x232	; 0x232 <DIO_TOGGLE_BIN>
 50c:	08 95       	ret

0000050e <main>:

uint8 coun=0;

int main(void)
{
    ExternalInterrupt0_INIT();
 50e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <ExternalInterrupt0_INIT>
	LCD_init();
 512:	0e 94 a4 01 	call	0x348	; 0x348 <LCD_init>
	UART_init();
 516:	0e 94 c6 02 	call	0x58c	; 0x58c <UART_init>
	Led0_INIT();
 51a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <Led0_INIT>
 51e:	ff cf       	rjmp	.-2      	; 0x51e <main+0x10>

00000520 <__vector_1>:
    {
    }
}

ISR(INT0_vect)
{
 520:	1f 92       	push	r1
 522:	0f 92       	push	r0
 524:	0f b6       	in	r0, 0x3f	; 63
 526:	0f 92       	push	r0
 528:	11 24       	eor	r1, r1
 52a:	2f 93       	push	r18
 52c:	3f 93       	push	r19
 52e:	4f 93       	push	r20
 530:	5f 93       	push	r21
 532:	6f 93       	push	r22
 534:	7f 93       	push	r23
 536:	8f 93       	push	r24
 538:	9f 93       	push	r25
 53a:	af 93       	push	r26
 53c:	bf 93       	push	r27
 53e:	ef 93       	push	r30
 540:	ff 93       	push	r31
	Led0_Toggel();
 542:	0e 94 82 02 	call	0x504	; 0x504 <Led0_Toggel>
	//Led1_Toggel();
	//Led2_Toggel();
	LCD_clear();
 546:	0e 94 36 02 	call	0x46c	; 0x46c <LCD_clear>
	LCD_writeInt(coun);
 54a:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	80 e0       	ldi	r24, 0x00	; 0
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	0e 94 3a 02 	call	0x474	; 0x474 <LCD_writeInt>
	UART_TX(coun);
 558:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 55c:	0e 94 db 02 	call	0x5b6	; 0x5b6 <UART_TX>
	coun++;
 560:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 564:	8f 5f       	subi	r24, 0xFF	; 255
 566:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 56a:	ff 91       	pop	r31
 56c:	ef 91       	pop	r30
 56e:	bf 91       	pop	r27
 570:	af 91       	pop	r26
 572:	9f 91       	pop	r25
 574:	8f 91       	pop	r24
 576:	7f 91       	pop	r23
 578:	6f 91       	pop	r22
 57a:	5f 91       	pop	r21
 57c:	4f 91       	pop	r20
 57e:	3f 91       	pop	r19
 580:	2f 91       	pop	r18
 582:	0f 90       	pop	r0
 584:	0f be       	out	0x3f, r0	; 63
 586:	0f 90       	pop	r0
 588:	1f 90       	pop	r1
 58a:	18 95       	reti

0000058c <UART_init>:

void UART_init(void)
{
	uint8 BR_value=0;
	/* init bins of tx and rx */
	DIO_SET_BIN_DIR(DIO_PORTD,DIO_PIN0,DIO_BIN_INPUT);
 58c:	40 e0       	ldi	r20, 0x00	; 0
 58e:	60 e0       	ldi	r22, 0x00	; 0
 590:	83 e0       	ldi	r24, 0x03	; 3
 592:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
	DIO_SET_BIN_DIR(DIO_PORTD,DIO_PIN1,DIO_BIN_OUTPUT);
 596:	41 e0       	ldi	r20, 0x01	; 1
 598:	61 e0       	ldi	r22, 0x01	; 1
 59a:	83 e0       	ldi	r24, 0x03	; 3
 59c:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_SET_BIN_DIR>
	
	BR_value=((freq/(16*BOUD_RATe))-1);
	UBRRL=BR_value;   
 5a0:	87 e6       	ldi	r24, 0x67	; 103
 5a2:	89 b9       	out	0x09, r24	; 9
	
	SET_BIT(UCSRB,3);
 5a4:	8a b1       	in	r24, 0x0a	; 10
 5a6:	88 60       	ori	r24, 0x08	; 8
 5a8:	8a b9       	out	0x0a, r24	; 10
	SET_BIT(UCSRB,4);
 5aa:	8a b1       	in	r24, 0x0a	; 10
 5ac:	80 61       	ori	r24, 0x10	; 16
 5ae:	8a b9       	out	0x0a, r24	; 10
	
	UCSRC=0x86;
 5b0:	86 e8       	ldi	r24, 0x86	; 134
 5b2:	80 bd       	out	0x20, r24	; 32
 5b4:	08 95       	ret

000005b6 <UART_TX>:
	
}

void UART_TX(uint8 data)
{
	UDR=data;
 5b6:	8c b9       	out	0x0c, r24	; 12
	while(GET_BIT(UCSRA,5)==0);
 5b8:	5d 9b       	sbis	0x0b, 5	; 11
 5ba:	fe cf       	rjmp	.-4      	; 0x5b8 <UART_TX+0x2>
}
 5bc:	08 95       	ret

000005be <__udivmodsi4>:
 5be:	a1 e2       	ldi	r26, 0x21	; 33
 5c0:	1a 2e       	mov	r1, r26
 5c2:	aa 1b       	sub	r26, r26
 5c4:	bb 1b       	sub	r27, r27
 5c6:	fd 01       	movw	r30, r26
 5c8:	0d c0       	rjmp	.+26     	; 0x5e4 <__udivmodsi4_ep>

000005ca <__udivmodsi4_loop>:
 5ca:	aa 1f       	adc	r26, r26
 5cc:	bb 1f       	adc	r27, r27
 5ce:	ee 1f       	adc	r30, r30
 5d0:	ff 1f       	adc	r31, r31
 5d2:	a2 17       	cp	r26, r18
 5d4:	b3 07       	cpc	r27, r19
 5d6:	e4 07       	cpc	r30, r20
 5d8:	f5 07       	cpc	r31, r21
 5da:	20 f0       	brcs	.+8      	; 0x5e4 <__udivmodsi4_ep>
 5dc:	a2 1b       	sub	r26, r18
 5de:	b3 0b       	sbc	r27, r19
 5e0:	e4 0b       	sbc	r30, r20
 5e2:	f5 0b       	sbc	r31, r21

000005e4 <__udivmodsi4_ep>:
 5e4:	66 1f       	adc	r22, r22
 5e6:	77 1f       	adc	r23, r23
 5e8:	88 1f       	adc	r24, r24
 5ea:	99 1f       	adc	r25, r25
 5ec:	1a 94       	dec	r1
 5ee:	69 f7       	brne	.-38     	; 0x5ca <__udivmodsi4_loop>
 5f0:	60 95       	com	r22
 5f2:	70 95       	com	r23
 5f4:	80 95       	com	r24
 5f6:	90 95       	com	r25
 5f8:	9b 01       	movw	r18, r22
 5fa:	ac 01       	movw	r20, r24
 5fc:	bd 01       	movw	r22, r26
 5fe:	cf 01       	movw	r24, r30
 600:	08 95       	ret

00000602 <_exit>:
 602:	f8 94       	cli

00000604 <__stop_program>:
 604:	ff cf       	rjmp	.-2      	; 0x604 <__stop_program>
